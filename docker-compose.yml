# Docker Compose File
services:

  # Backend
  backend:
    image: furkankayam/yigido-backend:v1.0
    container_name: backend
    #restart: always
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=jdbc:postgresql://postgresql_db:5432/agv
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=postgres
      - BROKER_URL=tcp://mqtt:1883
    depends_on:
      - postgresql_db
      - mqtt
    networks:
      - my-network

  # Frontend
  #frontend:
  ##sil  build: ./frontend/.
  #  image: furkankayam/yigido-frontend:v1.0
  #  container_name: frontend
  #  restart: always
  #  ports:
  #    - "80:5173"
  #  depends_on:
  #    - backend
  #  networks:
  #    - my-network

  # PostgreSQL
  postgresql_db:
    image: postgres:15.2
    container_name: postgresql_db
    #restart: always
    environment:
      POSTGRES_USER: ${PG_USER:-postgres}
      POSTGRES_PASSWORD: ${PG_PASSWORD:-postgres}
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - my-network

  # Mosquitto
  mqtt:
    image: eclipse-mosquitto:2.0.18
    container_name: mqtt
    #restart: always
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mqtt/config:/mosquitto/config
    networks:
      - my-network

  # Adminer
  adminer-panel:
    image: adminer:4.8.1
    container_name: adminer-panel
    #restart: always
    ports:
      - 9090:8080
    environment:
      ADMINER_DEFAULT_SERVER: postgresql_db
      ADMINER_DESIGN: pepa-linha
    depends_on:
      - postgresql_db
    networks:
      - my-network

volumes:
  postgres_data:
  mqtt:


networks:
  my-network:
    driver: bridge
